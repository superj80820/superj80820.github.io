(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{366:function(t,e,n){"use strict";n.r(e);var a=n(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"何謂非同步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#何謂非同步"}},[t._v("#")]),t._v(" 何謂非同步?")]),t._v(" "),n("p",[t._v('最近從python一路寫到javascript\n會對javascript的"非同步"感到非常頭大\n舉個例子\n我們現在在'),n("a",{attrs:{href:"https://jsbin.com/hayifeyewa/1/edit?js,console",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jsbin"),n("OutboundLink")],1),t._v("\n貼下以下程式碼")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("console.log('hi')\nfetch('hayifeyewa').then(done => console.log(\"done\"))\nconsole.log('bye')\n")])])]),n("p",[t._v("我們會印出")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("hi\nbye\ndone\n")])])]),n("p",[t._v("怎麼會這樣 以python的觀念來看 因該是")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("hi\ndone\nbye\n")])])]),n("p",[t._v("最大原因是python是個同步的語言\n意思是")]),t._v(" "),n("blockquote",[n("p",[t._v("在對任一行程式進行請求的時候\npython都等到程式回應之後在進行下一行程式\n即為IO阻塞式的語言")])]),t._v(" "),n("p",[t._v("為甚麼要稱作阻塞式 是因為當python在進行這個requests請求時\npython是停住在等待requests回應後 再進行下一步\n讓程式有順序的跑 邏輯也比較直覺\n那是不是代表同步的語言就是最好的呢?")]),t._v(" "),n("blockquote",[n("p",[t._v("要看使用場合決定")])]),t._v(" "),n("p",[t._v('如果js是同步語言會造成以下結果\n{%youtube p59z-tAoxyA %}\njs只要一有"長時間"的請求 js就會卡在那 甚麼事都不能做\n你試想 假設我今天在gmail傳送了一封信件(POST)\n在傳送過程中我的頁面都是當掉的 那使用體驗會有多差')]),t._v(" "),n("h3",{attrs:{id:"參考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://pjchender.blogspot.com/2017/08/javascript-learn-event-loop-stack-queue.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("[筆記] 理解 JavaScript 中的事件循環、堆疊、佇列和併發模式（Learn event loop, stack, queue, and concurrency mode of JavaScript in depth）"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"非同步怎麼做到的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非同步怎麼做到的"}},[t._v("#")]),t._v(" 非同步怎麼做到的?")]),t._v(" "),n("p",[t._v("我們現在瞭解了非同步就是")]),t._v(" "),n("blockquote",[n("p",[t._v("程序不必等待元件的I/O 即繼續執行\n當I/O元件回應的時候 即會觸發當初給他定義的function")])]),t._v(" "),n("p",[t._v("講得有點饒舌 我們用以下的影片來說明\n{%youtube N0Au8yc5IOw %}\n"),n("a",{attrs:{href:"http://latentflip.com/loupe/?code=Y29uc29sZS5sb2coJ2hpJykKCnNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogIGNvbnNvbGUubG9nKCd0aGVyZScpCn0sIDUwMDApCgpjb25zb2xlLmxvZygnSlNDb25mRVUnKQ%3D%3D!!!",target:"_blank",rel:"noopener noreferrer"}},[t._v("實作連結"),n("OutboundLink")],1),t._v("\n圖中的區域分別是")]),t._v(" "),n("ul",[n("li",[t._v("stack: js執行的地方")]),t._v(" "),n("li",[t._v("webapis: 瀏覽器提供的很多I/O api 有requests相關、計時器相關的")]),t._v(" "),n("li",[t._v("task queue: 當webapis的I/O操作完畢開始回應時\n會將當初準備好的js function建立在task queue")]),t._v(" "),n("li",[t._v("event loop: 用來監控stack與task queue的模塊\n只要stack是空的 就把task queue的js function丟到stack裡讓js執行")])]),t._v(" "),n("p",[t._v('首先 我們的瀏覽器"並不是只有js在上面運作"\njs只是上面的一個引擎 其他還有requests引擎 計時的引擎等等\n舉個例子 js在使用計時器引擎時 只是跟對方說')]),t._v(" "),n("blockquote",[n("p",[t._v("欸欸 這個callback function給你\n5秒後記得回來告訴我要執行這個callback啊")])]),t._v(" "),n("p",[t._v("過了5秒後 計時器引擎就會把這個callback生在task queue裡面\n然後event loop模塊趁js執行的空檔把callback交給js讓他執行(在stack裡執行)")]),t._v(" "),n("h3",{attrs:{id:"參考-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考-2"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://dotblogs.com.tw/kinanson/2018/03/28/075558",target:"_blank",rel:"noopener noreferrer"}},[t._v("[C#]Multiple thread和非同步的差異，並正確自訂非同步的方式"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"那在python中怎麼辦到"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#那在python中怎麼辦到"}},[t._v("#")]),t._v(" 那在python中怎麼辦到?")]),t._v(" "),n("p",[t._v("python 需要一個模塊 可以提供各種requests相關、計時器相關的I/O元件api\n並且此模塊也擁有 event loop的功能 因此python在3.5提供了asyncio\n舉個例子 我們對google要10次GET >>> "),n("a",{attrs:{href:"https://repl.it/repls/InformalCraftyWifi",target:"_blank",rel:"noopener noreferrer"}},[t._v("demo"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import requests\nimport time\nimport asyncio\n\nurl = \'https://www.google.com.tw/\'\nloop = asyncio.get_event_loop()\n\nstart_time = time.time()\n\nasync def send_req(url):\n    t = time.time()\n    print("Send a request at",t-start_time,"seconds.")\n\n    res = await loop.run_in_executor(None,requests.get,url)\n\n    t = time.time()\n    print("Receive a response at",t-start_time,"seconds.")\n\ntasks = []\n\nfor i in range(10):\n    task = loop.create_task(send_req(url))\n    tasks.append(task)\n\nloop.run_until_complete(asyncio.wait(tasks))\n')])])]),n("p",[t._v("他的順序是這樣的")]),t._v(" "),n("ol",[n("li",[t._v("asyncio 創造一個event loop模塊")]),t._v(" "),n("li",[t._v("python將send_req這10個非同步function丟入event loop給他監控")]),t._v(" "),n("li",[t._v("event loop啟動 python開始執行event loop 的function")]),t._v(" "),n("li",[t._v("遇到await就把後方帶的requests交給I/O request 元件 讓他執行")]),t._v(" "),n("li",[t._v("不理他繼續跑其他function")]),t._v(" "),n("li",[t._v("I/O requests元件執行完畢返回request 所要return的值")]),t._v(" "),n("li",[t._v("繼續執行下方程式碼\n"),n("img",{attrs:{src:"https://i.imgur.com/D704LUx.png",alt:""}})])]),t._v(" "),n("h3",{attrs:{id:"參考-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考-3"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://ithelp.ithome.com.tw/articles/10199385",target:"_blank",rel:"noopener noreferrer"}},[t._v("python的asyncio模組(一)：異步執行的好處"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://www.jianshu.com/p/6a37a6aee879",target:"_blank",rel:"noopener noreferrer"}},[t._v("高性能IO模型（摘选）"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"他的原理是甚麼？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#他的原理是甚麼？"}},[t._v("#")]),t._v(" 他的原理是甚麼？")]),t._v(" "),n("p",[t._v("首先 我們要先瞭解python的yiedl "),n("a",{attrs:{href:"https://blog.csdn.net/soonfly/article/details/78361819",target:"_blank",rel:"noopener noreferrer"}},[t._v("ref"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("yield就是讓你的程式碼可以中途中斷 將執行敘返回")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('def tset():\n    return ["a" * 10000000]\n\ndef test2(n):\n    count = 0\n    while < n:\n        yield count\n        count += 1\n')])])]),n("blockquote",[n("p",[t._v('而 "yield from" iterable本质上等于for item in iterable: yield item的缩写版')])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("def g1():     \n     yield  range(5)\ndef g2():\n     yield  from range(5)\n\nit1 = g1()\nit2 = g2()\nfor x in it1:\n    print(x)\n\nfor x in it2:\n    print(x)\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("def g1():\n  for item in range(5):\n    yield  item\ndef g2():\n  yield from range(5)\n\nit1 = g1()\nit2 = g2()\nfor x in it1:\n  print(x)\n\nfor x in it2:\n  print(x)\n")])])]),n("p",[n("img",{attrs:{src:"https://i.imgur.com/P2UdsKP.png",alt:""}}),t._v(" "),n("img",{attrs:{src:"https://i.imgur.com/ee606XA.png",alt:""}})]),t._v(" "),n("h3",{attrs:{id:"參考-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考-4"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.itread01.com/content/1545808988.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("分散式通訊協議-TCP/IP與常用IO方式"),n("OutboundLink")],1)]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"對公司有甚麼好處？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#對公司有甚麼好處？"}},[t._v("#")]),t._v(" 對公司有甚麼好處？")]),t._v(" "),n("p",[t._v("在我目前待的公司 我有一些case必須要同時測試多台device\n在我們對device provision的時候 有時候有很多需求是要同時provision多台\n或者MQTT再開一個thread來進行test case 我們就可以利用協程來達到同樣的效果\n他會比multi process 或者 thread 更輕便 不耗資源 因為")]),t._v(" "),n("ul",[n("li",[t._v("process本質上就是再開一個python 假設你80核心 那其實沒關係XD")]),t._v(" "),n("li",[t._v("thread本質上會因為GIL而造成CPU互搶資源")])]),t._v(" "),n("h3",{attrs:{id:"同時多台的test-case"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#同時多台的test-case"}},[t._v("#")]),t._v(" 同時多台的test case")]),t._v(" "),n("p",[t._v("以某一個專案來說來說\n以前不知道有python可以非同步 就只能採用js的非同步再套到robot上\n其實這造成後續維護上的不便")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("for(let i = 0; i < env.DEVICE_COUNT; i++) {\n            provisionPromise[i] = device.sendProvisionAndReturnClient(sn[i].substring(0, 12), deviceToken[i], provisionToken[i]);\n        }\n        deviceClients = await Promise.all(provisionPromise);\n")])])]),n("h3",{attrs:{id:"使用在mqtt上"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用在mqtt上"}},[t._v("#")]),t._v(" 使用在MQTT上")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/mossblaser/aiomqtt",target:"_blank",rel:"noopener noreferrer"}},[t._v("aiomqtt"),n("OutboundLink")],1),t._v("以實作了這個功能\n我們也可以開多個MQTT client 來對murano進行publish\n而不是再用multi thread 照成CPU運作的困難")]),t._v(" "),n("h3",{attrs:{id:"參考-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考-5"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://ccu-cs-os2009s-495410049.blogspot.com/2009/06/os-process-thread-part-3.html?m=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("GIL是甚麼"),n("OutboundLink")],1)]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"其他有趣的文章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他有趣的文章"}},[t._v("#")]),t._v(" 其他有趣的文章")]),t._v(" "),n("h3",{attrs:{id:"把node-js-的非同步模快套再python上"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#把node-js-的非同步模快套再python上"}},[t._v("#")]),t._v(" 把node js 的非同步模快套再python上")]),t._v(" "),n("p",[t._v("再以上介紹上 可以知道要做到非同步協程\n主要的重點就是要有一個擁有Event loop核心的模快來跟電腦底層的I/O元件分配任務\n所以我們也可以把node js 的libuv模快 套用到python上")]),t._v(" "),n("h4",{attrs:{id:"參考-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考-6"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://carlos.aboutmy.info/blog/?p=713",target:"_blank",rel:"noopener noreferrer"}},[t._v("基於 libuv 的 uvloop 令 Python 3.5+ 的 asyncio 更快"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"http://sj82516-blog.logdown.com/posts/3903966/from-libuv-v8-to-nodejs-series-libuv-environment-setting-and-description",target:"_blank",rel:"noopener noreferrer"}},[t._v("[從libuv/v8到nodejs 系列] ：Libuv - 環境建置與說明"),n("OutboundLink")],1)]),t._v(" "),n("h4",{attrs:{id:"線程-進程-是甚麼"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#線程-進程-是甚麼"}},[t._v("#")]),t._v(" 線程 進程 是甚麼")]),t._v(" "),n("p",[t._v("可以看看RobinC的文章 寫的更清楚")]),t._v(" "),n("blockquote",[n("p",[t._v("引用RobinC：\nprocess是資源分配的最小單位 你可以把他想成一個工廠\nthread式CPU執行的最小單位 你可以把他想成工人")])]),t._v(" "),n("p",[t._v("CPU密集型（你可以想成很多演算法） >>>\n適合使用multi process 因為各個工廠的資源都是分開的 不會因為爭奪GIL資源而耗費時間\nIO密集型（你可以想成很多requests）>>>\n適合使用multi thread 因為thread把事情交代給request I/O就開始等待 而這些I/O都是分開的 不會搶資源(可以參考上圖) 但是首先條件式你的電腦要式多CPU 可以跑多thread")]),t._v(" "),n("h4",{attrs:{id:"參考-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考-7"}},[t._v("#")]),t._v(" 參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/20953544",target:"_blank",rel:"noopener noreferrer"}},[t._v("谈谈python的GIL、多线程、多进程"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"callback-hell"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#callback-hell"}},[t._v("#")]),t._v(" callback hell")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.imgur.com/7dpMt31.png",alt:""}})]),t._v(" "),n("p",[t._v("關鍵 >>> 假設我們的程式碼試想要有序的 即")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('x = request1("hi")\ny = request2(x)\nz = request3(y)\n')])])]),n("p",[t._v("再同步的語言中會等待IO返回 再執行下一行\n可是非同步的語言中IO返回所執行的東西是當初交代給他的callback function\n所以你必須把下一行程式碼包裝好 跟IO說 等等你完成後要執行這個喔\n長這樣")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('z = requests1("hi", requests2(x, requests3(y)))\n')])])]),n("p",[t._v("把他變成波動全就變這樣")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('z = requests1("hi",\n        requests2(x,\n            requests3(y)\n        )\n    )\n')])])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"其他參考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他參考"}},[t._v("#")]),t._v(" 其他參考")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://laike9m.com/blog/huan-zai-yi-huo-bing-fa-he-bing-xing,61/%E8%BF%98%E5%9C%A8%E7%96%91%E6%83%91%E5%B9%B6%E5%8F%91%E5%92%8C%E5%B9%B6%E8%A1%8C%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[t._v("还在疑惑并发和并行？"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/25228075",target:"_blank",rel:"noopener noreferrer"}},[t._v("从0到1，Python异步编程的演进之路"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/27258289",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python Async/Await入门指南"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"http://www.jollen.org/blog/2008/08/linux_device_driver_blocking_io.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux 驅動程式的 I/O, #4: 什麼是 Blocking I/O"),n("OutboundLink")],1)]),t._v(" "),n("disqus")],1)}),[],!1,null,null,null);e.default=r.exports}}]);